name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 20.63.16.243 >> ~/.ssh/known_hosts

      - name: Deploy stack
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            # Debug info
            echo "Node capacity:"
            kubectl describe node aks-node-1 | grep Capacity -A 5
            
            echo "Current resource usage:"
            kubectl describe node aks-node-1 | grep "Allocated resources" -A 5

            # Update repo
            cd ~/WebGoat
            git pull

            # Clean up old resources
            echo "Cleaning up old resources..."
            kubectl delete deployment webgoat -n webgoat || true
            kubectl delete service webgoat -n webgoat || true
            
            # Create namespaces
            kubectl create namespace webgoat --dry-run=client -o yaml | kubectl apply -f -
            kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

            # Deploy WebGoat with minimal config first
            echo "Deploying WebGoat with minimal configuration..."
            cat > /tmp/webgoat-deploy.yaml << EOL
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: webgoat
              namespace: webgoat
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: webgoat
              template:
                metadata:
                  labels:
                    app: webgoat
                spec:
                  tolerations:
                  - key: "node-role.kubernetes.io/control-plane"
                    operator: "Exists"
                    effect: "NoSchedule"
                  containers:
                  - name: webgoat
                    image: webgoat/webgoat
                    ports:
                    - containerPort: 8080
                    resources:
                      requests:
                        memory: "256Mi"
                        cpu: "200m"
                      limits:
                        memory: "512Mi"
                        cpu: "500m"
            EOL

            cat > /tmp/webgoat-svc.yaml << EOL
            apiVersion: v1
            kind: Service
            metadata:
              name: webgoat
              namespace: webgoat
            spec:
              type: NodePort
              ports:
              - port: 8080
                targetPort: 8080
              selector:
                app: webgoat
            EOL

            kubectl apply -f /tmp/webgoat-deploy.yaml
            kubectl apply -f /tmp/webgoat-svc.yaml

            # Wait and verify
            echo "Waiting for WebGoat pod..."
            sleep 10
            echo "Pod status:"
            kubectl get pods -n webgoat
            echo "Pod details:"
            kubectl describe pods -n webgoat
          '