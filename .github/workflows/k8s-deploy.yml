name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Build and Push Docker Image for WebGoat"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 20.63.16.243 >> ~/.ssh/known_hosts

      - name: Prepare Kubernetes Environment
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            echo "Disabling swap and resetting Kubernetes..."
            sudo swapoff -a
            sudo sed -i "/ swap / s/^\(.*\)$/#\1/g" /etc/fstab
            
            # Reset existing Kubernetes cluster
            sudo kubeadm reset -f || true

            # Ensure correct cgroup configuration
            sudo mkdir -p /etc/containerd
            containerd_config="/etc/containerd/config.toml"
            sudo containerd config default | sudo tee ${containerd_config}
            sudo sed -i "s/SystemdCgroup = false/SystemdCgroup = true/g" ${containerd_config}
            sudo systemctl restart containerd

            # Load required kernel modules
            sudo modprobe overlay br_netfilter
            cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
            overlay
            br_netfilter
            EOF

            # Configure kernel parameters
            cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
            net.bridge.bridge-nf-call-iptables  = 1
            net.bridge.bridge-nf-call-ip6tables = 1
            net.ipv4.ip_forward                 = 1
            EOF
            sudo sysctl --system
          '

      - name: Initialize Kubernetes Cluster
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            echo "Initializing Kubernetes cluster..."
            for attempt in {1..3}; do
              sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=20.63.16.243 --ignore-preflight-errors=all && break
              echo "Retrying kubeadm init (Attempt: $attempt)..."
              sleep 10
            done

            # Setup kubeconfig for the user
            mkdir -p $HOME/.kube
            sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config
          '

      - name: Install Calico Network Plugin
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            echo "Deploying Calico Network Plugin..."
            kubectl apply --validate=false -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml || true
          '

      - name: Wait for Node Ready
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            echo "Waiting for Kubernetes node to become Ready..."
            for i in {1..30}; do
              if kubectl get nodes | grep -q "Ready"; then
                echo "Node is Ready"
                exit 0
              fi
              echo "Waiting for node to be ready... ($i/30)"
              sleep 10
            done
            echo "Warning: Kubernetes node did not become Ready in time."
          '

      - name: Deploy Applications
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            echo "Deploying applications..."

            # Remove control-plane taint to allow pod scheduling
            kubectl taint nodes --all node-role.kubernetes.io/control-plane:NoSchedule- || true

            # Create namespaces
            kubectl create namespace webgoat --dry-run=client -o yaml | kubectl apply -f -
            kubectl create namespace monitoring --dry-run=client -o yaml | kubectl apply -f -

            # Deploy application manifests
            kubectl apply -f kubernetes/prometheus/ -n monitoring || true
            kubectl apply -f kubernetes/grafana/ -n monitoring || true

            # Deploy WebGoat application (deployment.yaml and service.yaml)
            kubectl apply -f ~/WebGoat/kubernetes/deployment.yaml -n webgoat
            kubectl apply -f ~/WebGoat/kubernetes/service.yaml -n webgoat

            echo "Deployment complete. Verifying resources..."

            # Verify WebGoat pods and service
            kubectl get pods -n webgoat
            kubectl get svc -n webgoat
          '


      - name: Debug Kubelet Status
        if: always()
        run: |
          ssh -i ~/.ssh/id_rsa azureuser@20.63.16.243 '
            echo "Debugging Kubelet Status..."
            sudo systemctl status kubelet || true
            sudo journalctl -xeu kubelet | tail -n 50 || true
          '
